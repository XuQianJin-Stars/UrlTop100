package com.forwardxu.makedata;

import org.apache.commons.lang.time.FastDateFormat;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * Generating large files
 */
public class GenBigFile {

    public static void main(String[] args) {
        if (args != null) {
            if (args.length == 3) {
            } else {
                System.err.println("Example: #fileName, #batch");
                return;
            }
        } else {
            System.err.println("Example: #fileName, #batch");
            return;
        }

        String fileName = args[0];
        int filesize = Integer.parseInt(args[1]);
        int batch = Integer.parseInt(args[2]);

        for (int i = 0; i < filesize; i++) {
            WriteFileTask task = new WriteFileTask(fileName, batch);
            task.start();
        }
    }

    static class WriteFileTask extends Thread {

        private String fileName;

        private int batch;

        private static int loop_count = 1 * 1024 * 1024 * 1024 / 15;

        public WriteFileTask(String fileName, int batch) {
            this.fileName = fileName;
            this.batch = batch;
        }

        @Override
        public void run() {
            System.out.println(System.currentTimeMillis());
            createData(this.fileName, this.batch);
        }

        private FastDateFormat fastDateFormat = FastDateFormat.getInstance("yyyy-MM-dd HH:mm:ss.SSS");

        /**
         * almost 1gb of files are generated by default
         *
         * @param filename
         * @param batch
         */
        public void createData(String filename, int batch) {
            StringBuffer context = new StringBuffer();
            FileOutputStream fop = null;

            File file;
            String url = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789";
            System.out.println(fastDateFormat.format(new Date()));// new Date()为获取当前系统时间
            String[] content = {"com", "cn", "en"};
            try {

                file = new File(filename);
                fop = new FileOutputStream(file, true);


                if (!file.exists()) {
                    file.createNewFile();
                }

                for (int i = 0; i < loop_count; i++) {
                    int url_start_len = (int) (Math.random() * 3);
                    int url_start_num = url_start_len <= 0 ? 1 : url_start_len;
                    int url_start_len_end = url_start_num + (int) (Math.random() * 5) + 5;
                    String url_start = url.substring(url_start_num, url_start_len_end);
                    int url_aite_len = (int) (Math.random() * 52);
                    int url_aite_len_num = url_aite_len <= 0 ? 1 : url_aite_len + 1;
                    int url_aite_lenend = url_aite_len_num + (int) (Math.random() * 9);
                    String url_aite = url.substring(url_aite_len_num, url_aite_lenend);
                    int url_end = (int) (Math.random() * 3);
                    context.append(url_start + "." + url_aite + "." + content[url_end] + "\n");

                    if (context.toString().getBytes().length % batch == 0) {
                        byte[] contentInBytes = context.toString().getBytes();
                        fop.write(contentInBytes);
                        context.setLength(0);
                    }
                }

                if (context.length() > 0) {
                    byte[] contentInBytes = context.toString().getBytes();
                    fop.write(contentInBytes);
                }

                fop.flush();
                fop.close();

                System.out.println(loop_count);
                System.out.println("Done  " + batch);
                System.out.println(fastDateFormat.format(new Date()));
            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                try {
                    if (fop != null) {
                        fop.close();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

}
